#!/bin/sh -e
#
# rc.local
#
# Added by TorBox
rfkill unblock all
sudo systemctl stop hostapd

if grep "TWEBSSH=1" /home/torbox/torbox/run/torbox.run ; then
	[ ! -f /etc/nginx/sites-available/webssh.conf ] && sudo cp /home/torbox/torbox/etc/nginx/sites-available/sample-webssh.conf /etc/nginx/sites-available/webssh.conf
	[ ! -L /etc/nginx/sites-enabled/webssh.conf ] && sudo ln -sf /etc/nginx/sites-available/webssh.conf /etc/nginx/sites-enabled/
	(nohup sudo /home/torbox/torbox/lib/webssh/twebssh --unix-socket=/var/run/webssh.sock &) 2>/dev/null
	sleep 2
	sudo ls /var/run | grep .*-onion-.*.sock | xargs -I {} -d"\n" sudo rm /var/run/{}
	sleep 2
	sudo systemctl restart nginx
fi

# Change the MAC address if needed
# List all available network interfaces
AVAILABLE_INTERFACES=$(ip -o link show | awk -F': ' '{print $2}' | sed "/^lo/d" | sed "/^wwan/d")
for INTERFACE in $AVAILABLE_INTERFACES ; do
	if grep "^MAC_$INTERFACE=permanent" /home/torbox/torbox/run/torbox.run || grep "^MAC_$INTERFACE=random" /home/torbox/torbox/run/torbox.run ; then
			sudo ip link set dev $INTERFACE down
			sleep 3
			if grep "^MAC_$INTERFACE=permanent" /home/torbox/torbox/run/torbox.run; then sudo macchanger -p $INTERFACE; fi
			if grep "^MAC_$INTERFACE=random" /home/torbox/torbox/run/torbox.run; then sudo macchanger -r $INTERFACE; fi
			sudo ip link set dev $INTERFACE up
	else
		MAC_ADDRESS=$(grep "MAC_$INTERFACE=" /home/torbox/torbox/run/torbox.run | sed "s/.*=//g")
			sudo ip link set dev $INTERFACE down
			sleep 3
			sudo ip link set dev $INTERFACE address $MAC_ADDRESS
			sudo ip link set dev $INTERFACE up
	fi
done

sleep 2
sudo systemctl start hostapd
sleep 2

# Let's check if we can auto-connect to a wireless network
if ip link | grep wlan0 | grep "state DOWN" ; then
  sudo /usr/bin/python3 /home/torbox/torbox/torbox_wireless_manager.py -i wlan0 -a
  sudo sed -i "s/^INTERNET_IFACE=.*/INTERNET_IFACE=wlan0/" /home/torbox/torbox/run/torbox.run
  sleep 2
fi

# If a wireless USB dongle is available, let's check if we can auto-connect to a wireless network
if ip link | grep wlan1 | grep "state DOWN" ; then
  sudo /usr/bin/python3 /home/torbox/torbox/torbox_wireless_manager.py -i wlan1 -a
  sudo sed -i "s/^INTERNET_IFACE=.*/INTERNET_IFACE=wlan1/" /home/torbox/torbox/run/torbox.run
  sleep 2
fi

# If configured, turn TACA on
if grep "LOGCHECK=1" /home/torbox/torbox/run/torbox.run ; then
  (nohup sudo /usr/bin/python3 /home/torbox/torbox/log_check.py &) 2>/dev/null
  sleep 2
fi

sudo /home/torbox/torbox/run/start_tfs initial
sudo systemctl start dnsmasq
if sudo timeout 5 sudo route | grep -m 1 default ; then
	sudo /usr/sbin/ntpdate pool.ntp.org
fi
sudo systemctl stop dnsmasq
sudo /sbin/iptables-restore < /etc/iptables.ipv4.nat

exit 0
